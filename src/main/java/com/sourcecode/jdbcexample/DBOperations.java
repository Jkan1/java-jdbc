package com.sourcecode.jdbcexample;import java.sql.Connection;import java.sql.DriverManager;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import java.util.ArrayList;import java.util.List;public class DBOperations {    private static Connection connection;    private static String BOOKS_TABLE = "Books List";    public static void getConnection() throws SQLException {        if (connection == null) {            String databaseUrl = System.getenv("MYSQL_DATABASE_URL");            String databaseUser = System.getenv("MYSQL_DATABASE_USER");            String databasePassword = System.getenv("MYSQL_DATABASE_PASSWORD");            // protocol : subprotocol(type of db) : (host:port) : database_name            connection = DriverManager.getConnection(databaseUrl, databaseUser, databasePassword);        }    }    public static void closeConnection() {        if (connection != null) {            connection = null;        }    }    public static void createTable() throws SQLException {        getConnection();        Statement statement = connection.createStatement();        Boolean result = statement.execute("CREATE TABLE `" + BOOKS_TABLE + "` ( id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, name VARCHAR(30) NOT NULL, author VARCHAR(30) NOT NULL, cost FLOAT, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP )");        System.out.println("Table Created : " + result);        closeConnection();    }    public static List<Book> getBooks() throws SQLException {        getConnection();        List<Book> booksResult = new ArrayList<>();        Statement statement = connection.createStatement();        ResultSet result = statement.executeQuery("SELECT * FROM `" + BOOKS_TABLE + "`");        while (result.next()) {            int bookId = result.getInt(1);            String bookName = result.getString(2);            String bookAuthor = result.getString(3);            float bookCost = result.getFloat(4);            Book book = new Book(bookId, bookName, bookAuthor, bookCost);            booksResult.add(book);        }        closeConnection();        return booksResult;    }    public static boolean insert(Book book) throws SQLException {        getConnection();        PreparedStatement prepStatement = connection.prepareStatement("INSERT INTO `" + BOOKS_TABLE + "` (id,name,author,cost) VALUES (null,?,?,?)");        prepStatement.setString(1, book.getName());        prepStatement.setString(2, book.getAuthor());        prepStatement.setFloat(3, book.getCost());        int updateCount = prepStatement.executeUpdate();        closeConnection();        if (updateCount < 1) {            System.out.println("INSERT : FAILED");            return false;        }        return true;    }    public static Book getBook(int bookId) throws SQLException {        getConnection();        Statement statement = connection.createStatement();        ResultSet result = statement.executeQuery("SELECT * FROM `" + BOOKS_TABLE + "` WHERE id = " + bookId);        while (result.next()) {            int id = result.getInt(1);            String name = result.getString(2);            String author = result.getString(3);            float cost = result.getFloat(4);            Book resultBook = new Book(id, name, author, cost);            return resultBook;        }        closeConnection();        return null;    }}